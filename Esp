wait(0.1)
repeat
    wait(0.1)
until game:IsLoaded()

wait(0.5)

local Cache = {}
local Names = true
local WeaponType = true
local MaxDistance = 1500

local modules = {
    ["PlayerClient"] = {},
}
for _, v in pairs(getgc(true)) do
    if typeof(v) == "function" and islclosure(v) then
        local info = debug.getinfo(v)
        local name = string.match(info.short_src, "%.([%w_]+)$")
        if name and modules[name] and info.name then
            modules[name][info.name] = info.func
        end
    end
end

local PlayerList = debug.getupvalue(modules.PlayerClient.updatePlayers, 1)

local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
if playerGui:FindFirstChild("XDEDEADEDE") then
    playerGui.XDEDEADEDE:Destroy()
end

local Beamed = {
    Varis = {
        RunService = game:GetService("RunService"),
        Camera = game:GetService("Workspace").CurrentCamera,
    },
}

local BeamVar = Beamed.Varis

local function CreateClass(Class, Properties)
    local ClassInt = typeof(Class) == "string" and Instance.new(Class) or Class
    for Property, Value in next, Properties do
        ClassInt[Property] = Value
    end
    return ClassInt
end

local XDEDEADEDE = CreateClass("ScreenGui", {
    Parent = playerGui,
    Name = "XDEDEADEDE",
})

local function DupeCheck(name)
    local existingESP = XDEDEADEDE:FindFirstChild(name)
    if existingESP then
        existingESP:Destroy()
    end
end

local function IsVisible(model)
    local humanoidRootPart = model:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end

    local cameraPos = BeamVar.Camera.CFrame.Position
    local targetPos = humanoidRootPart.Position
    local direction = (targetPos - cameraPos).unit
    local distance = (targetPos - cameraPos).magnitude

    if distance > MaxDistance then
        return false
    end

    local hitPart, _ = workspace:FindPartOnRay(Ray.new(cameraPos, direction * distance), game.Players.LocalPlayer.Character, false, true)
    return hitPart and hitPart:IsDescendantOf(model)
end

local function ESP(playertable)
    if not playertable then return end
    local model = playertable.model
    local humanoidRootPart = model:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    DupeCheck(model.Name)

    local NameTag = CreateClass("TextLabel", {
        Parent = XDEDEADEDE,
        Name = "NameTag",
        BackgroundTransparency = 1,
        Font = Enum.Font.Code,
        TextColor3 = Color3.fromRGB(161, 0, 219),
        TextStrokeTransparency = 0,
        TextSize = 11,
        TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
        Size = UDim2.new(0, 100, 0, 20),
        AnchorPoint = Vector2.new(0.5, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        Visible = Names,
    })

    local WeaponText = CreateClass("TextLabel", {
        Parent = XDEDEADEDE,
        Name = "WeaponText",
        BackgroundTransparency = 1,
        Font = Enum.Font.Code,
        TextColor3 = Color3.fromRGB(161, 0, 219),
        TextStrokeTransparency = 0,
        TextSize = 11,
        TextStrokeColor3 = Color3.fromRGB(0, 0, 0),
        Size = UDim2.new(0, 100, 0, 20),
        AnchorPoint = Vector2.new(0.5, 0),
        Position = UDim2.new(0.5, 0, 0, 20),
        Visible = WeaponType,
    })

    local Connection
    Connection = BeamVar.RunService.RenderStepped:Connect(function()
        if model and model.Parent and humanoidRootPart and humanoidRootPart.Parent then
            local Pos, OnScreen = BeamVar.Camera:WorldToScreenPoint(humanoidRootPart.Position)
            local distance = math.floor((BeamVar.Camera.CFrame.Position - humanoidRootPart.Position).magnitude)
            local WeaponFound = playertable.equippedItem and playertable.equippedItem.type or "None"

            if OnScreen then
                NameTag.Position = UDim2.new(0, Pos.X, 0, Pos.Y - 30)
                WeaponText.Position = UDim2.new(0, Pos.X, 0, Pos.Y + 5)

                local username = model:FindFirstChild("Head") and model.Head:FindFirstChild("Nametag") and model.Head.Nametag.tag.Text or "Player"
                NameTag.Text = username .. " [" .. distance .. "s]"
                WeaponText.Text = "[" .. (WeaponFound:upper() or "NONE") .. "]"

                local color = IsVisible(model) and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(161, 0, 219)
                NameTag.TextColor3 = color
                WeaponText.TextColor3 = color

                NameTag.Visible = Names
                WeaponText.Visible = WeaponType
            else
                NameTag.Visible = false
                WeaponText.Visible = false
            end
        else
            NameTag.Visible = false
            WeaponText.Visible = false
        end

        if not model then
            NameTag:Destroy()
            WeaponText:Destroy()
            if Connection then
                Connection:Disconnect()
            end
        end
    end)
end

local Cache = {}
for i, v in pairs(PlayerList) do
    if v.type == "Player" and v.model:FindFirstChild("HumanoidRootPart") and not table.find(Cache, v) then
        table.insert(Cache, v)
        ESP(v)
    end
end

game:GetService("Workspace").ChildAdded:Connect(function()
    task.delay(1.5, function()
        for i, v in pairs(PlayerList) do
            if v.type == "Player" and v.model:FindFirstChild("HumanoidRootPart") and not table.find(Cache, v) then
                table.insert(Cache, v)
                ESP(v)
            end
        end
    end)
end)
